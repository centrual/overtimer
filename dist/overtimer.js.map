{"version":3,"sources":["../src/overtimer.js"],"names":[],"mappings":"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","file":"overtimer.js","sourcesContent":["/**\n * Enum for Overtimer states.\n * @type {{CREATED: number, WAITING: number, RUNNING: number, PAUSED: number, STOPPED: number}}\n */\nOvertimer.STATES = {\n  CREATED: 0,\n  WAITING: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  STOPPED: 4\n}\n\n/**\n * Global timer object for performance.\n */\nOvertimer.global = {\n  callbacks: [],\n  timer: null,\n  updateMs: 1,\n  lastId: 0,\n  \n  /**\n   * Joins the global timer list\n   * @param callback {function} Callback function will trigger ~ every ms\n   * @return {Number} Unique timer id for leave.\n   */\n  join(callback) {\n    let found = Overtimer.global.callbacks.find(f => f.callback === callback)\n    \n    if (typeof found === 'undefined') {\n      Overtimer.global.lastId += 1\n      Overtimer.global.callbacks.push({callback, id: Overtimer.global.lastId})\n    } else {\n      return found.id\n    }\n    \n    if (Overtimer.global.timer === null)\n      Overtimer.global.timer = setInterval(Overtimer.global.tick, Overtimer.global.updateMs)\n    \n    return Overtimer.global.lastId\n  },\n  \n  /**\n   * Leaves from global timer list\n   * @param id {number} Auto generated id from join for leave.\n   */\n  leave(id) {\n    Overtimer.global.callbacks = Overtimer.global.callbacks.filter(c => c.id !== id)\n    \n    if (Overtimer.global.callbacks.length === 0 && Overtimer.global.timer !== null) {\n      clearInterval(Overtimer.global.timer)\n      Overtimer.global.timer = null\n    }\n  },\n  \n  /**\n   * Callback trigger function for every ms\n   */\n  tick() {\n    Overtimer.global.callbacks.forEach((cb) => {\n      cb.callback()\n    })\n  }\n}\n\n/**\n * Overtimer constructor.\n * @param duration {Number} Duration of timer\n * @param opts {Object} Overtimer options\n * @param onFinish {Function} Shorthand for on('finish')\n * @constructor\n */\nfunction Overtimer(duration = 1000, opts = {}, onFinish = null) {\n  let finishEvent = null\n  let defaults = {\n    duration,\n    overtimeLimit: duration,\n    overtimeBump: duration,\n    \n    poll: 100,\n    delay: 0,\n    repeat: 1,\n    debug: false,\n    start: true,\n  }\n  \n  this.eventHandlers = {\n    'start': [],\n    'tick': [],\n    'stop': [],\n    'pause': [],\n    'resume': [],\n    'delaystart': [],\n    'delayend': [],\n    'bump': [],\n    'repeat': [],\n    'finish': [],\n    'update': [],\n    'poll': []\n  }\n  \n  if (typeof opts === 'object') {\n    this.options = Object.assign({}, defaults, opts)\n  } else {\n    if (typeof opts === 'function') {\n      finishEvent = opts\n    }\n    this.options = Object.assign({}, defaults)\n  }\n  \n  if (typeof onFinish === 'function')\n    finishEvent = onFinish\n  \n  let durationError = false\n  \n  if (typeof duration !== 'number') {\n    this.log('Duration must be number value.', 1000)\n    durationError = true\n  } else if (duration <= 0) {\n    this.log('Duration must be bigger than 0.', 1001)\n    durationError = true\n  }\n  \n  if( durationError ) {\n    this.options.duration = 1000\n    this.options.overtimeLimit = 1000\n    this.options.overtimeBump = 1000\n  }\n  \n  // Properties\n  this.version = '0.1.5'\n  this.globalTimerId = null\n  this.state = Overtimer.STATES.CREATED\n  \n  this.createdAt = Date.now()\n  this.startedAt = -1\n  this.delayStartedAt = -1\n  this.delayEndedAt = -1\n  this.repeatedAt = -1\n  this.tickedAt = -1\n  this.stoppedAt = -1\n  this.finishedAt = -1\n  this.pausedAt = -1\n  this.resumedAt = -1\n  this.bumpedAt = -1\n  \n  this.pausedTime = -1\n  this.delayedTime = -1\n  this.overTime = -1\n  this.elapsedTime = -1\n  this.remainingTime = -1\n  this.totalDelayedTime = -1\n  this.totalElapsedTime = -1\n  this.totalRemainingTime = -1\n  this.currentRepeat = -1\n  \n  this.repeatDuration = -1\n  this.repeatDurationWithDelay = -1\n  this.totalDuration = -1\n  this.totalDurationWithDelay = -1\n  \n  this.currentRepeatPercentWithDelay = -1\n  this.currentRepeatPercent = -1\n  this.totalPercentWithDelay = -1\n  this.totalPercent = -1\n  \n  this.timesUpdatedAt = -1\n  this.lastPollAt = -1\n  \n  if (typeof finishEvent === 'function')\n    this.on('finish', finishEvent)\n  \n  if (this.options.start)\n    this.start()\n}\n\n/**\n * Logs errors if debug enabled\n * @param msg {String} Message will be displayed\n * @param code {Number} Code will be displayed\n */\nOvertimer.prototype.log = function (msg = 'Unexcepted error.', code = -1) {\n  if (this.options.debug)\n    console.log(`${code !== -1 ? '( ' + code.toString() + ' ): ' : ''} ${msg}`)\n}\n\n/**\n * Registers callback to event.\n * @param eventName {String} Selected event name from available events.\n * @param callback {Function} Function to be triggered when the event occurs.\n * @return {Boolean} true if succeeded, false if not.\n */\nOvertimer.prototype.on = function (eventName, callback) {\n  if (typeof eventName !== 'string') {\n    this.log('Event name must be string.', 1002)\n    return false\n  } else if (eventName.length < 1) {\n    this.log('Event name length be bigger than 0.', 1003)\n    return false\n  } else if (typeof this.eventHandlers[eventName] === 'undefined') {\n    this.log('Event name not registered!', 1004)\n    return false\n  } else if (typeof callback !== 'function') {\n    this.log('Callback is not function!', 1005)\n    return false\n  }\n  \n  this.eventHandlers[eventName].push(callback)\n  return true\n}\n\n/**\n * Removes all callbacks or spesific function from event\n * @param eventName {String} Selected event name from available events.\n * @param func {Function} Function to be removed.\n * @return {boolean} true if succeeded, false if not.\n */\nOvertimer.prototype.off = function (eventName, func = null) {\n  if (typeof eventName !== 'string') {\n    this.log('Event name must be string.', 1006)\n    return false\n  } else if (eventName.length < 1) {\n    this.log('Event name length be bigger than 0.', 1007)\n    return false\n  } else if (typeof this.eventHandlers[eventName] === 'undefined') {\n    this.log('Event name not registered!', 1008)\n    return false\n  }\n  \n  if (typeof func === 'function')\n    this.eventHandlers[eventName] = this.eventHandlers[eventName].filter(f => f !== func)\n  else\n    this.eventHandlers[eventName] = []\n  \n  return true\n}\n\n/**\n * Triggers registered event\n * @param eventName {string} Event name you want to trigger\n * @param payload {object} payload for trigger. can be array, or can be object\n * @return {boolean} Returns true if succeeded, false if not\n */\nOvertimer.prototype.trigger = function (eventName, ...payload) {\n  if (typeof eventName !== 'string') {\n    this.log('Event name must be string.', 1009)\n    return false\n  } else if (eventName.length < 1) {\n    this.log(\"Event name's length must bigger than 1.\", 1010)\n    return false\n  } else if (typeof this.eventHandlers[eventName.toLowerCase()] === 'undefined' || !Array.isArray(this.eventHandlers[eventName.toLowerCase()])) {\n    this.log('Event not found in list.', 1011)\n    return false\n  }\n  \n  this.eventHandlers[eventName.toLowerCase()].forEach((evt) => {\n    evt.call(this, ...payload)\n  })\n  \n  return true\n}\n\n/**\n * Joins main interval for updates.\n */\nOvertimer.prototype.joinToMainInterval = function () {\n  this.globalTimerId = Overtimer.global.join(this.tickMainInterval.bind(this))\n}\n\n/**\n * All time updates happens in this function.\n */\nOvertimer.prototype.tickMainInterval = function () {\n  let now = Date.now(),\n    diff = now - this.timesUpdatedAt\n  \n  if (this.state === Overtimer.STATES.RUNNING) {\n    this.elapsedTime += diff\n    this.remainingTime -= diff\n    this.totalElapsedTime += diff\n    this.totalRemainingTime -= diff\n  \n    this.currentRepeatPercentWithDelay = parseFloat((this.elapsedTime + this.delayedTime) / this.repeatDurationWithDelay * 100)\n    this.totalPercentWithDelay = parseFloat((this.totalElapsedTime + this.totalDelayedTime) / this.totalDurationWithDelay * 100)\n    this.currentRepeatPercent = parseFloat(this.elapsedTime / this.repeatDuration * 100)\n    this.totalPercent = parseFloat(this.totalElapsedTime / this.totalDuration * 100)\n  } else if (this.state === Overtimer.STATES.PAUSED) {\n    this.pausedTime += diff\n  } else if (this.state === Overtimer.STATES.WAITING) {\n    this.delayedTime += diff\n    this.totalDelayedTime += diff\n  \n    this.currentRepeatPercentWithDelay = parseFloat((this.elapsedTime + this.delayedTime) / this.repeatDurationWithDelay * 100)\n    this.totalPercentWithDelay = parseFloat((this.totalElapsedTime + this.totalDelayedTime) / this.totalDurationWithDelay * 100)\n    \n    if (this.delayedTime >= this.options.delay)\n      this.endDelay()\n  }\n  \n  this.timesUpdatedAt = now\n  \n  this.trigger('update')\n  \n  if (this.lastPollAt + this.options.poll < Date.now()) {\n    this.trigger('poll')\n    this.lastPollAt = Date.now()\n  }\n  \n  if (this.remainingTime < 1)\n    this.tick()\n}\n\n/**\n * Leaves from main interval\n */\nOvertimer.prototype.leaveFromMainInterval = function () {\n  Overtimer.global.leave(this.globalTimerId)\n  this.globalTimerId = null\n}\n\n/**\n * Increases the current timer's duration to within the maximum timeout limit.\n * @param customValue {number} Custom duration for bump duration. OvertimeBump option will use if not specified.\n * @return {boolean} true if bump success, false if not\n */\nOvertimer.prototype.bump = function (customValue = -1) {\n  if (this.state === Overtimer.STATES.STOPPED || this.state === Overtimer.STATES.CREATED) {\n    this.log('Can\\'t use overtime bump on stopped or created state.', 1011)\n    return false\n  } else if (typeof this.options.overtimeLimit !== 'number' || this.options.overtimeLimit <= 0) {\n    this.log('Can\\'t use overtime bump when overtime limit below 0.', 1012)\n    return false\n  }\n  \n  let mustBumpFor = (typeof customValue === 'number' && customValue > 0) ? customValue : this.options.overtimeBump\n  \n  if (typeof mustBumpFor !== 'number' || mustBumpFor <= 0) {\n    this.log('Bump value is not valid! Must be number and bigger than 0 for bump:', 1013)\n    this.log(mustBumpFor, 1014)\n    return false\n  }\n  \n  let maxBump = this.options.overtimeLimit - this.remainingTime\n  \n  if (maxBump < 0) {\n    this.log('Timer not reached the overtime limit yet.', 1015)\n    return false\n  } else if (mustBumpFor < maxBump) {\n    this.remainingTime += mustBumpFor\n    this.totalRemainingTime += mustBumpFor\n    this.overTime += mustBumpFor\n  \n    this.repeatDuration += mustBumpFor\n    this.repeatDurationWithDelay += mustBumpFor\n    this.totalDuration += mustBumpFor\n    this.totalDurationWithDelay += mustBumpFor\n    this.bumpedAt = Date.now()\n    this.trigger('bump', mustBumpFor, this.remainingTime)\n  } else {\n    this.remainingTime += maxBump\n    this.totalRemainingTime += maxBump\n    this.overTime += maxBump\n  \n    this.repeatDuration += maxBump\n    this.repeatDurationWithDelay += maxBump\n    this.totalDuration += maxBump\n    this.totalDurationWithDelay += maxBump\n    this.bumpedAt = Date.now()\n    this.trigger('bump', maxBump, this.remainingTime)\n  }\n  return true\n}\n\n/**\n * Starts the timer\n * @return {boolean} true if succeeded, false if not\n */\nOvertimer.prototype.start = function () {\n  if (this.state === Overtimer.STATES.RUNNING || this.state === Overtimer.STATES.WAITING) {\n    this.log('Timer is already started.', 1016)\n    return false\n  }\n  \n  let totalDuration = this.options.duration * this.options.repeat\n  \n  if (this.options.delay > 0) {\n    this.state = Overtimer.STATES.WAITING\n    this.delayedTime = 0\n    this.totalDelayedTime = 0\n    this.delayStartedAt = Date.now()\n    this.totalDurationWithDelay = totalDuration + (this.options.repeat * this.options.delay)\n    this.repeatDurationWithDelay = this.options.duration + this.options.delay\n  }\n  else {\n    this.state = Overtimer.STATES.RUNNING\n    this.totalDurationWithDelay = totalDuration\n    this.repeatDurationWithDelay = this.options.duration\n  }\n  \n  this.startedAt = Date.now()\n  this.elapsedTime = 0\n  this.totalElapsedTime = 0\n  this.overTime = 0\n  this.remainingTime = this.options.duration\n  this.repeatDuration = this.options.duration\n  this.totalRemainingTime = totalDuration\n  this.totalDuration = totalDuration\n  this.currentRepeat = 1\n  \n  this.currentRepeatPercentWithDelay = 0\n  this.currentRepeatPercent = 0\n  this.totalPercentWithDelay = 0\n  this.totalPercent = 0\n  \n  this.timesUpdatedAt = Date.now()\n  this.lastPollAt = Date.now()\n  \n  this.joinToMainInterval()\n  this.trigger('start')\n  \n  if (this.options.delay > 0)\n    this.trigger('delaystart')\n  \n  return true\n}\n\n/**\n * Pauses the timer\n * @return {boolean} true if succeeded, false if not\n */\nOvertimer.prototype.pause = function () {\n  if (this.state !== Overtimer.STATES.RUNNING && this.state !== Overtimer.STATES.WAITING) {\n    this.log(\"Can't pause when timer not running.\", 1017)\n    return false\n  }\n  \n  this.state = Overtimer.STATES.PAUSED\n  this.pausedAt = Date.now()\n  \n  return true\n}\n\n/**\n * Ends delay immediately\n * @return {boolean} return true if succeeded, false if not\n */\nOvertimer.prototype.endDelay = function () {\n  if (this.state !== Overtimer.STATES.WAITING) {\n    this.log(\"Can't end delay when timer not waiting.\", 1018)\n    return false\n  } else if( typeof this.options.delay !== 'number' || this.options.delay <= 0 ) {\n    this.log(\"Can't end delay when delay option not number or delay below 0.\", 1019)\n    return false\n  }\n  let remainingDelay = this.options.delay - this.delayedTime\n  \n  this.delayEndedAt = Date.now()\n  this.state = Overtimer.STATES.RUNNING\n  \n  if( remainingDelay > 0 ) {\n    this.totalDuration -= remainingDelay\n    this.totalDurationWithDelay -= remainingDelay\n    this.repeatDuration -= remainingDelay\n    this.repeatDurationWithDelay -= remainingDelay\n  }\n  \n  this.trigger('delayend')\n  return true\n}\n\n/**\n * Resumes the paused timer\n * @return {boolean} true if succeeded, false if not\n */\nOvertimer.prototype.resume = function () {\n  if (this.state !== Overtimer.STATES.PAUSED) {\n    this.log(\"Can't resume when timer not paused.\", 1020)\n    return false\n  }\n  if (this.options.delay > 0 && this.delayedTime < this.options.delay)\n    this.state = Overtimer.STATES.WAITING\n  else\n    this.state = Overtimer.STATES.RUNNING\n  \n  this.resumedAt = Date.now()\n  return true\n}\n\n/**\n * Repeats the loop\n * @return {boolean} Returns true if succeeded, false if not\n */\nOvertimer.prototype.repeat = function () {\n  if (this.state !== Overtimer.STATES.RUNNING && this.state !== Overtimer.STATES.WAITING) {\n    this.log(\"Can't repeat when timer not running.\", 1021)\n    return false\n  }\n  \n  this.totalDuration -= this.remainingTime\n  this.totalDurationWithDelay -= this.remainingTime\n  \n  this.currentRepeat += 1\n  this.elapsedTime = 0\n  this.remainingTime = this.options.duration\n  this.repeatedAt = Date.now()\n  this.totalRemainingTime = ( this.options.repeat * this.options.duration ) - ((this.currentRepeat - 1) * this.options.duration)\n  this.currentRepeatPercentWithDelay = 0\n  this.currentRepeatPercent = 0\n  \n  if (this.options.delay > 0) {\n    this.delayedTime = 0\n    this.state = Overtimer.STATES.WAITING\n  }\n  else\n    this.state = Overtimer.STATES.RUNNING\n  \n  this.timesUpdatedAt = Date.now()\n  this.trigger('repeat')\n  \n  if (this.options.delay > 0)\n    this.trigger('delaystart')\n  return true\n}\n\n/**\n * Works when timer tick time comes.\n */\nOvertimer.prototype.tick = function () {\n  this.tickedAt = Date.now()\n  this.trigger('tick')\n  \n  if (this.currentRepeat < this.options.repeat)\n    this.repeat()\n  else {\n    this.finishedAt = Date.now()\n    this.totalRemainingTime = 0\n    this.remainingTime = 0\n    this.stoppedAt = Date.now()\n    \n    this.totalPercentWithDelay = 100\n    this.totalPercent = 100\n    this.currentRepeatPercent = 100\n    this.currentRepeatPercentWithDelay = 100\n  \n    this.trigger('update')\n    this.trigger('poll')\n    this.trigger('finish')\n    this.stop()\n  }\n}\n\n/**\n * Stops the timer\n * @return {boolean} Returns true if succeeded, false if not\n */\nOvertimer.prototype.stop = function () {\n  if (this.state === Overtimer.STATES.STOPPED) {\n    this.log('Timer is already stopped.', 1022)\n    return false\n  }\n  this.leaveFromMainInterval()\n  \n  this.state = Overtimer.STATES.STOPPED\n  this.stoppedAt = Date.now()\n  \n  this.trigger('stop')\n  return true\n}\n\nif (typeof module !== 'undefined')\n  module.exports = Overtimer\n\nif (typeof window !== 'undefined')\n  window.Overtimer = Overtimer\n"]}